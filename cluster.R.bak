#!/usr/bin/env Rscript


args <- commandArgs(T)
if(length(args)<2)
{
    cat("cal.cor.R <in.rdata> <output.prefix>\n")
    q()
}
rd.file <- args[1]
out.dir <- args[2]

dir.create(out.dir,recursive = T,showWarnings = F)

lname <- load(rd.file)
lname
suppressPackageStartupMessages(library("DESeq2"))
suppressPackageStartupMessages(library("org.Hs.eg.db"))
suppressPackageStartupMessages(library("RColorBrewer"))
suppressPackageStartupMessages(library("gplots"))
suppressPackageStartupMessages(library("ggplot2"))
suppressPackageStartupMessages(library("reshape"))

source("/lustre1/zeminz_pkuhpc/zhenglt/02.pipeline/cancer/lib/myFunc.R")

getVSTMat <- function(x)
{
    ## rlog and VST; for QC, bind=T
    #rld <- rlog(x, blind=T)
    #rlogMat <- assay(rld)
    vsd <- varianceStabilizingTransformation(x, blind=T)
    vstMat <- assay(vsd)
    vstMat
}
getVSD <- function(x,blind=F)
{
    ## rlog and VST; for QC, bind=T
    vsd <- varianceStabilizingTransformation(x, blind)
    vsd
}


plotC<-function(x,cData,designM,outDir,n=50,extra="",filter=NULL, gfilter=NULL)
{
    ## visualization
    #vstMat <- x
    vsd <- x
    vstMat <- assay(vsd)
    if(!is.null(filter))
    {
	    vstMat <- vstMat[,filter]
	    designM <- designM[filter,]
	    cData <- cData[filter,]
    }
    if(!is.null(gfilter))
    {
	    vstMat <- vstMat[rownames(vstMat) %in% gfilter[!is.na(gfilter)],]
    }
    color.map <- function(sampleType) 
    { 
        if (sampleType=="PTC") brewer.pal(9,"Set1")[1]
        else if (sampleType=="PTH") brewer.pal(9,"Set1")[2]
        else if (sampleType=="PTS") brewer.pal(9,"Set1")[3]
        else if (sampleType=="TTC") brewer.pal(9,"Set1")[4]
        else if (sampleType=="TTH") brewer.pal(9,"Set1")[5]
        else if (sampleType=="TTS") brewer.pal(9,"Set1")[6]
    }
    patientcolors <- unlist(lapply(designM$sampleType,color.map))
    ###hmcol <- colorRampPalette(brewer.pal(9, "GnBu"))(100)

    ## heatmap by most variable genes
    rowVar <- apply(vstMat,1,var)
    if(is.null(n))
    {
	    n=nrow(vstMat)
    }
    select <- order(rowVar,decreasing = T)[1:n]
    dat.plot <-vstMat[select,] 
    rownames(dat.plot) <- entrezToXXX(rownames(dat.plot))
    pdf(paste(outDir,"/DESeq2.QC.Cluster.Var.n",n,extra,".pdf",sep=""),width=12,height=12)
    heatmap.2(dat.plot,col=bluered(100), ColSideColors=patientcolors, Rowv = T, Colv = T, scale="row", density.info="none", dendrogram="both", keysize=1.2, trace="none", margin=c(15, 10), main="Most variable genes",cexRow=55/n,cexCol=1.8)
    #heatmap.2(dat.plot, col = hmcol, Rowv = FALSE, Colv = T, scale="none", dendrogram="column", trace="none", margin=c(10, 6), main="Most variable genes")
    dev.off()
    ## sample distance
    if(!file.exists(paste(outDir,"/DESeq2.QC.SampleDist",extra,".pdf")))
    {
	    distsRL <- dist(t(vstMat))
	    mat <- as.matrix(distsRL)
	    #rownames(mat) <- colnames(mat) <- with(cData, paste(sampleType, patient, sep=" : "))
	    rownames(mat) <- colnames(mat) <- rownames(cData)
	    pdf(paste(outDir,"/DESeq2.QC.SampleDist",extra,".pdf",sep=""),width=12,height=12)
	    heatmap.2(mat, RowSideColors=patientcolors, ColSideColors=patientcolors, density.info="none", keysize=1.2, trace="none", margin=c(15, 15), main="Sample Distance",cexRow=1.8,cexCol=1.8)
	    #heatmap.2(mat, trace="none", margin=c(13, 13), main="Sample Distance")
	    dev.off()
	    #heatmap.2(mat, trace="none", col = rev(hmcol), margin=c(13, 13), main="Sample Distance")
	    ## PCA
	    #pdf(paste(outDir,"/DESeq2.PCA.pdf",sep=""),width=8,height=6)
	    plotPCA.dat <- plotPCA(vsd, intgroup=c("sampleType"),returnData=T) 
	    percentVar <- round(100 * attr(plotPCA.dat, "percentVar"))
            ggplot(data = plotPCA.dat, aes_string(x = "PC1", y = "PC2", color = "group")) + geom_point(size = 3) + 
		    xlab(paste0("PC1: ", round(percentVar[1]), "% variance")) + 
		    ylab(paste0("PC2: ", round(percentVar[2]), "% variance"))
	    ggsave(filename=paste(outDir,"/DESeq2.PCA",extra,".pdf",sep=""),width=8,height=6)
	    write.table(plotPCA.dat,paste(outDir,"/DESeq2.PCA",extra,".txt",sep=""),col.names = T,row.names = F,quote = F)
	    #dev.off()
    }
}

plotClusterFC <- function(x, outDir,n=50,extra="",gfilter=NULL)
{
    names(x) <- gsub(".FC","",names(x),perl=T)
    if(!is.null(gfilter))
    {
	    x <- x[rownames(x) %in% gfilter[!is.na(gfilter)],]
    }
    rowVar <- apply(x,1,var)
    if(is.null(n))
    {
	    n=nrow(x)
    }
    select <- order(rowVar,decreasing = T)[1:n]
    dat.plot <-as.matrix(x[select,])
    rownames(dat.plot) <- entrezToXXX(rownames(dat.plot))
    pdf(paste(outDir,"/DESeq2.FC.Cluster.Var.n",n,extra,".pdf",sep=""),width=12,height=12)
    heatmap.2(dat.plot, Rowv = T, Colv = T, scale="row", 
	      density.info="none", dendrogram="both", keysize=1.2, trace="none", 
	      margin=c(15, 10), main="Most variable genes",cexRow=55/n,cexCol=1.8)
    dev.off()
    if(!file.exists(paste(outDir,"/DESeq2.FC.SampleDist",extra,".pdf")))
    {
	    distsRL <- dist(t(x))
	    mat <- as.matrix(distsRL)
	    rownames(mat) <- colnames(mat) <- names(x)
	    pdf(paste(outDir,"/DESeq2.FC.SampleDist",extra,".pdf",sep=""),width=12,height=12)
	    heatmap.2(mat, density.info="none", keysize=1.2, trace="none", margin=c(15, 15), main="Sample Distance",cexRow=1.8,cexCol=1.8)
	    dev.off()
    }

}




plotClusterDE<-function(resSigStrict,vsd,designM,outDir)
{
    color.map <- function(sampleType) { if (sampleType=="normal" || sampleType=="control") "#0000FF" else "#FF0000" }
    patientcolors <- unlist(lapply(designM$sampleType,color.map))
    
    pdf(paste(outDir,"/DESeq2.plot.DECluster.pdf",sep=""))
    
    select <- rownames(resSigStrict)[1:30]
    select.f <- !is.na(select)
    select <- select[select.f]
    
    print(select)
    select.name <- entrezToXXX(select)
    print(select.name)

    plot.dat <- assay(vsd)[select,]
    rownames(plot.dat) <- select.name
    if(length(select)>0)
    {
    	heatmap.2(plot.dat, ColSideColors=patientcolors, Rowv = T, Colv = T, 
		      scale="row", density.info="none", dendrogram="both", trace="none",
		      keysize=1.2, 
		      margin=c(10, 8), main="Most Differentially Expressed genes")
    	#heatmap.2(assay(vsd)[select,], col = greenred(100), ColSideColors=patientcolors, Rowv = T, Colv = T, scale="row", density.info="none", dendrogram="both", trace="none", margin=c(10, 6), main="Most Differentially Expressed genes")
    }
    
    select <- rownames(resSigStrict)
    select.f <- !is.na(select)
    select <- select[select.f]
    select.name <- entrezToXXX(select)
    plot.dat <- assay(vsd)[select,]
    rownames(plot.dat) <- select.name
    print(select.name)
    if(length(select)>0)
    {
    	heatmap.2(plot.dat, ColSideColors=patientcolors, Rowv = T, Colv = T, 
		      scale="row", density.info="none", dendrogram="both", trace="none",
		      keysize=1.2,
		      margin=c(10, 8), main="All Differentially Expressed genes",cexRow = 27/length(select))
    	#heatmap.2(assay(vsd)[select,], col = greenred(100), ColSideColors=patientcolors, Rowv = T, Colv = T, scale="row", density.info="none", dendrogram="both", trace="none", margin=c(10, 6), main="All Differentially Expressed genes",labRow=F)
    } 
    dev.off()
}



#pVSTMat <- getVSTMat(dds)
pVSD <- getVSD(dds,blind=T)
plotC(pVSD,colData(dds),myDesign,out.dir,n=50)
plotC(pVSD,colData(dds),myDesign,out.dir,n=100)
plotC(pVSD,colData(dds),myDesign,out.dir,n=200)
plotC(pVSD,colData(dds),myDesign,out.dir,n=500)
plotC(pVSD,colData(dds),myDesign,out.dir,n=1000)
#tumorSamples <- rownames(subset(myDesign,sampleType=="tumor"))
#plotC(pVSD,colData(dds),myDesign,out.dir,n=50,extra=".onlyTumor",filter=tumorSamples)
#plotC(pVSD,colData(dds),myDesign,out.dir,n=100,extra=".onlyTumor",filter=tumorSamples)
#plotC(pVSD,colData(dds),myDesign,out.dir,n=200,extra=".onlyTumor",filter=tumorSamples)
#plotC(pVSD,colData(dds),myDesign,out.dir,n=500,extra=".onlyTumor",filter=tumorSamples)
#plotC(pVSD,colData(dds),myDesign,out.dir,n=1000,extra=".onlyTumor",filter=tumorSamples)
#
#gfilter.1 <- XXXToEntrez(read.table("EMT.geneset/EM_siganture_1.txt",header=F)[,1])
#gfilter.2 <- XXXToEntrez(read.table("EMT.geneset/EM_siganture_2.txt",header=F)[,1])
#gfilter.1and2 <- XXXToEntrez(read.table("EMT.geneset/EM_siganture_1and2.txt",header=F)[,1])
#plotC(pVSD,colData(dds),myDesign,out.dir,n=NULL,extra=".EM.sig1",gfilter=gfilter.1,filter=tumorSamples)
#plotC(pVSD,colData(dds),myDesign,out.dir,n=NULL,extra=".EM.sig2",gfilter=gfilter.2,filter=tumorSamples)
#plotC(pVSD,colData(dds),myDesign,out.dir,n=NULL,extra=".EM.sig1and2",gfilter=gfilter.1and2,filter=tumorSamples)
#
#### FC clustering
#plotClusterFC(fc.df[,c(-1,-2,-3)], out.dir,n=50,extra="",gfilter=NULL)
#plotClusterFC(fc.df[,c(-1,-2,-3)], out.dir,n=100,extra="",gfilter=NULL)
#plotClusterFC(fc.df[,c(-1,-2,-3)], out.dir,n=200,extra="",gfilter=NULL)
#plotClusterFC(fc.df[,c(-1,-2,-3)], out.dir,n=500,extra="",gfilter=NULL)
#plotClusterFC(fc.df[,c(-1,-2,-3)], out.dir,n=1000,extra="",gfilter=NULL)
#plotClusterFC(fc.df[,c(-1,-2,-3)], out.dir,n=NULL,extra=".EM.sig1",gfilter=gfilter.1)
#plotClusterFC(fc.df[,c(-1,-2,-3)], out.dir,n=NULL,extra=".EM.sig2",gfilter=gfilter.2)
#plotClusterFC(fc.df[,c(-1,-2,-3)], out.dir,n=NULL,extra=".EM.sig1and2",gfilter=gfilter.1and2)
#
#pVSD <- getVSD(dds)
#plotClusterDE(resSigStrict,pVSD,myDesign,out.dir)
#
#pdf(paste(out.dir,"/DESeq2.plot.MA.pdf",sep=""),width=8,height=6)
#par(mar=c(7,7,4,2),cex.lab=1.5)
### MA plot
#plotMA(res, main="",ylab=expression(log[2]~~fold~~change), ylim=c(-2,2))
#dev.off()
#
#colData(dds)
#ls()
